# Test code for the NAE modules
# Copyright: (c) 2020, Anvitha Jain (@anvitha-jain) <anvjain@cisco.com>

# GNU General Public License v3.0+ (see LICENSE or https://www.gnu.org/licenses/gpl-3.0.txt)

- name: Test that we have an NAE host, NAE username and NAE password
  fail:
    msg: 'Please define the following variables: nae_host, nae_username and nae_password.'
  when: nae_host is not defined or nae_username is not defined or nae_password is not defined

- name: Set vars
  set_fact:
    nae_info: &nae_info
      host: '{{ nae_host }}'
      port: '{{ nae_port }}'
      username: '{{ nae_username }}'
      password: '{{ nae_password }}'
      validate_certs: '{{ nae_validate_certs | default(false) }}'

- include_tasks: ../../../../../../integration/targets/nae_compliance/tasks/create_ag.yml
  tags: create_ag
  when: check_ag.msg is defined and check_ag.msg == "Assurance group Change Management does not exist"

- name: Delete a pre_change analysis
  nae_prechange:
    <<: *nae_info
    ag_name: Change Management
    name: '{{ item }}'
    state: absent
  ignore_errors: yes
  loop:
  - TestAnalysis
  - TestAnalysis_2

- name: Add pre-change analysis from manual changes ( Contract )
  nae_prechange:
    <<: *nae_info
    ag_name: Change Management
    changes: |
        [
            {
                "vzBrCP": {
                    "attributes": {
                        "descr": "",
                        "intent": "install",
                        "nameAlias": "",
                        "prio": "unspecified",
                        "scope": "context",
                        "targetDscp": "unspecified",
                        "dn": "uni/tn-AnsibleTest/brc-test_brc",
                        "name": "test_brc",
                        "pcv_status": "created"
                    },
                    "children": []
                }
            }
        ]
    name: TestAnalysis
    state: present
  register: add_pre_change

- name: Checking pre-change analysis from manual changes ( Contract ) exists
  assert:
    that:
    - add_pre_change.Result == "Pre-change analysis TestAnalysis successfully created."

- name: Query added specific pre-change analysis
  nae_prechange:
    <<: *nae_info
    ag_name: Change Management
    name: TestAnalysis
    state: query
  register: query_specific_result
  ignore_errors: true
  until: query_specific_result.msg != "Pre-Change Job has not yet completed."
  retries: 10
  delay: 5

- name: Save pre-change analysis from manual changes ( EPG ) before running it
  nae_prechange:
    <<: *nae_info
    ag_name: Change Management
    changes: |
        [
            {
                "fvAEPg": {
                    "attributes": {
                        "descr": "",
                        "exceptionTag": "",
                        "floodOnEncap": "disabled",
                        "fwdCtrl": "none",
                        "hasMcastSource": "no",
                        "isAttrBasedEPg": "no",
                        "matchT": "AtleastOne",
                        "nameAlias": "",
                        "pcEnfPref": "unenforced",
                        "prefGrMemb": "exclude",
                        "prio": "unspecified",
                        "shutdown": "no",
                        "dn": "uni/tn-common/ap-default/epg-epg",
                        "name": "epg",
                        "pcv_status": "created"
                    },
                    "children": [{
                        "fvRsBd": {
                            "attributes": {
                                "tnFvBDName": "",
                                "pcv_status": ""
                            }
                        }
                    }]
                }
            }
        ]
    name: TestAnalysis_2
    description: do change
    state: present
    save: True
  register: save_pre_change

- name: Checking pre-change analysis from manual changes ( EPG ) is saved
  assert:
    that:
    - save_pre_change.Result == "Pre-change analysis TestAnalysis_2 successfully created."

- name: Modify existing pre-change analysis from manual changes (edit and save) again
  nae_prechange:
    <<: *nae_info
    ag_name: Change Management
    changes: |
        [
            {
                "fvAEPg": {
                    "attributes": {
                        "descr": "modify and save prechange analysis ",
                        "exceptionTag": "",
                        "floodOnEncap": "disabled",
                        "fwdCtrl": "none",
                        "hasMcastSource": "no",
                        "isAttrBasedEPg": "no",
                        "matchT": "AtleastOne",
                        "nameAlias": "",
                        "pcEnfPref": "unenforced",
                        "prefGrMemb": "exclude",
                        "prio": "unspecified",
                        "shutdown": "no",
                        "dn": "uni/tn-common/ap-default/epg-epg",
                        "name": "epg",
                        "pcv_status": "created"
                    },
                    "children": [{
                        "fvRsBd": {
                            "attributes": {
                                "tnFvBDName": "",
                                "pcv_status": ""
                            }
                        }
                    }]
                }
            }
        ]
    name: TestAnalysis_2
    description: modify and run the existing (saved) EPG prechange analysis
    state: present
    save: True
  register: modify_and_save_pre_change

- name: Checking modification of existing pre-change analysis from manual changes (edit and run) again
  assert:
    that:
    - modify_and_save_pre_change.Result == "Pre-change analysis TestAnalysis_2 successfully created."

- name: Modify existing pre-change analysis from manual changes (edit and run)
  nae_prechange:
    <<: *nae_info
    ag_name: Change Management
    changes: |
        [
            {
                "fvAEPg": {
                    "attributes": {
                        "descr": "modify and run the existing (saved) EPG prechange analysis ",
                        "exceptionTag": "",
                        "floodOnEncap": "disabled",
                        "fwdCtrl": "none",
                        "hasMcastSource": "no",
                        "isAttrBasedEPg": "no",
                        "matchT": "AtleastOne",
                        "nameAlias": "",
                        "pcEnfPref": "unenforced",
                        "prefGrMemb": "exclude",
                        "prio": "unspecified",
                        "shutdown": "no",
                        "dn": "uni/tn-common/ap-default/epg-epg",
                        "name": "epg",
                        "pcv_status": "created"
                    },
                    "children": [{
                        "fvRsBd": {
                            "attributes": {
                                "tnFvBDName": "",
                                "pcv_status": ""
                            }
                        }
                    }]
                }
            }
        ]
    name: TestAnalysis_2
    description: modify prechange analysis
    state: present
    save: False 
  register: modify_pre_change

- name: Checking modification of existing pre-change analysis from manual changes (edit and run)
  assert:
    that:
    - modify_pre_change.Result == "Pre-change analysis TestAnalysis_2 successfully created."

- name: Query specific pre-change analysis
  nae_prechange:
    <<: *nae_info
    ag_name: Change Management
    name: TestAnalysis_2
    state: query
  register: query_specific_result
  ignore_errors: true
  until: query_specific_result.msg != "Pre-Change Job has not yet completed."
  retries: 10
  delay: 10

# - name: Add a pre-change analysis from manual changes again
#   nae_prechange:
#     <<: *nae_info
#     ag_name: Change Management
#     changes: |
#         [
#             {
#                 "vzBrCP": {
#                     "attributes": {
#                         "descr": "",
#                         "intent": "install",
#                         "nameAlias": "",
#                         "prio": "unspecified",
#                         "scope": "context",
#                         "targetDscp": "unspecified",
#                         "dn": "uni/tn-AnsibleTest/brc-test_brc",
#                         "name": "test_brc",
#                         "pcv_status": "created"
#                     },
#                     "children": []
#                 }
#             }
#         ]
#     name: TestAnalysis
#     state: present
#   delegate_to: localhost
#   ignore_errors: yes
#   register: add_pre_change_again

# - name: Verify Addding pre-change analysis from manual changes
#   assert:
#     that:
#     - add_pre_change_again.msg == "Pre-Change Analysis Job with the name TestAnalysis already exists."

- name: Query all pre-change analysis
  nae_prechange:
    <<: *nae_info
    ag_name: Change Management
    state: query
  register: query_all_result

- name: Verify querying all pre-change analysis
  assert:
    that:
    - query_all_result.Analyses[0].imdata[0] != None

- name: Query specific pre-change analysis
  nae_prechange:
    <<: *nae_info
    ag_name: Change Management
    name: TestAnalysis_2
    state: query
  register: query_specific_result
  ignore_errors: true
  until: query_specific_result.msg != "Pre-Change Job has not yet completed."
  retries: 10
  delay: 10

- name: Verify querying specific pre-change analysis
  assert:
    that:
    - query_specific_result.msg == "Pre-change analysis failed. The above smart events have been detected for later epoch only."

- name: Query non-existing pre-change analysis
  nae_prechange:
    <<: *nae_info
    ag_name: Change Management
    name: NewAnalysis_2
    state: query
  register: query_result
  ignore_errors: true

- name: Verify querying non-existing pre-change analysis
  assert:
    that:
    - query_result.msg == "No such Pre-Change Job exists."

- name: Delete a pre_change analysis
  nae_prechange:
    <<: *nae_info
    ag_name: Change Management
    name: TestAnalysis_2
    state: absent
  ignore_errors: yes
  register: remove_pre_change
  until: remove_pre_change.msg != "The analysis is in progress. The Pre-Change Job cannot be deleted."
  retries: 10
  delay: 5

- name: Verify deletion of pre-change analysis
  assert:
    that:
    - remove_pre_change.msg == "Delete Pre-change Job successful"